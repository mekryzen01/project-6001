
$(document).ready(function () {
    fetchData("get_projectbyid", { emp_id: localStorage.getItem("emp_id") })
    fetchData("get_project_status1", { emp_id: localStorage.getItem("emp_id") })
    fetchData("get_project_status2", { emp_id: localStorage.getItem("emp_id") })
    fetchData("get_stock")
    fetchData("get_customer")
});
$(document).on('click', '.btn-edit', function () {
    const productId = $(this).data('id');
    editProduct(productId);
});

$(document).on('click', '.btn-deletepd', function () {
    const productId = $(this).data('id');
    deleteProduct(productId);
});
$(document).on('click', '.btn-delete', function () {
    const projectId = $(this).data('id');
    deleteProject(projectId);
});

function fetchData(funcName, data = {}) {
    $.ajax({
        type: "POST",
        url: "../servers/function",
        data: { function: funcName, ...data },
        success: function (response) {
            let result = JSON.parse(response);
            // console.log(result);
            if (funcName === "get_projectbyid") {
                // console.log(result[0].countdata);
                if (result && result.length > 0 && result[0].countdata != null) {
                    $('#countproject').html(result[0].countdata);
                } else {
                    $('#countproject').html(0);
                }
                $("#nameproject").html(result[0].project_name)
                $("#insertprojectname").val(result[0].project_name)
                $("#statusbyid").html(result[0].project_status)
                $("#startp").html(result[0].project_start)
                $("#endp").html(result[0].project_end)
                $("#customerp").html(result[0].cus_id)
                $("#empp").html(result[0].employee)
                $("#empname").val(result[0].employee)
                $("#projectvalue").html(result[0].project_value)
                $("#projectid").html(result[0].project_id)
                $("#insertprojectid").val(result[0].project_id)
                // สร้าง HTML สำหรับ Progress Spinners ในแต่ละแถวของ result
                $('#project-table').DataTable({
                    data: result,
                    responsive: true,
                    columns: [{
                        data: 'project_id'
                    },
                    {
                        data: 'project_name'
                    },
                    {
                        data: 'project_start'
                    },
                    {
                        data: 'project_end'
                    },
                    // {
                    //     data: 'cus_id'
                    // },
                    {
                        data: 'project_status',
                        createdCell: function (td, cellData, rowData, row, col) {
                            if (cellData == "อยู่ระหว่างดำเนินการ") {
                                $(td).addClass('status1');
                            } else if (cellData == "ปิดโครงการ") {
                                $(td).addClass('status2');
                            } else if (cellData == "ยกเลิก") {
                                $(td).addClass('status3');
                            }
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `
                            <form action="../pages/projectid" method="post">
                                <input type="hidden" name="projectID" value="${data.project_id}">
                                <input type="hidden" name="projectname" value="${data.project_name}">
                                <button type="submit" name="detail" class="btn btn-primary btn-detail">detail</button>
                            </form>`;
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `<button class="btn btn-primary btn-edit" data-id="${data.project_id}">Edit</button>`;
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `<button class="btn btn-danger btn-delete" data-id="${data.project_id}">Delete</button>`;
                        }
                    }
                    ]
                });
            } else if (funcName === "get_project_status1") {
                if (result[0] != null) {
                    $('#status1').html(result[0].countdata)
                } else {
                    $('#status1').html(0)
                }
            } else if (funcName === "get_project_status2") {
                if (result[0] != null) {
                    $('#status2').html(result[0].countdata)
                } else {
                    $('#status2').html(0)
                }
            } else if (funcName === "get_stock") {
                $('#stock-table').DataTable({
                    data: result,
                    responsive: true,
                    columns: [{
                        data: 'product_id'
                    },
                    {
                        data: 'product_name'
                    },
                    {
                        data: 'product_counting'
                    },
                    {
                        data: 'product_cost'
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `<button class="btn btn-primary btn-edit" data-id="${data.product_id}">Edit</button>`;
                        }
                    },
                    {
                        data: null,
                        render: function (data, type, row) {
                            return `<button class="btn btn-danger btn-deletepd" data-id="${data.product_id}">Delete</button>`;
                        }
                    }
                    ]
                });
            }
        },
        error: function (error) {
            console.error("Error fetching data:", error);
        }
    });
}
function editProduct(productId) {
    // 1. ส่ง AJAX request เพื่อดึงข้อมูลเดิมของสินค้า
    $.ajax({
        type: "POST",
        url: "../servers/function",
        data: {
            function: "get_stockByid",
            product_id: productId
        },
        success: function (response) {
            const productDetails = JSON.parse(response);
            // 2. แสดง SweetAlert2 modal พร้อมกับข้อมูลเดิม
            console.log(productDetails);
            Swal.fire({
                title: 'Edit Product',
                html: `
                    <input type="text" id="productName" class="swal2-input" placeholder="Product Name" value="${productDetails[0].product_name}">
                    <input type="text" id="productCounting" class="swal2-input" placeholder="Product Counting" value="${productDetails[0].product_counting}">
                    <input type="text" id="productValue" class="swal2-input" placeholder="Product Value" value="${productDetails[0].product_cost}">
                `,
                confirmButtonText: 'Save',
                focusConfirm: false,
                preConfirm: () => {
                    const productName = Swal.getPopup().querySelector('#productName').value;
                    const productCounting = Swal.getPopup().querySelector('#productCounting').value;
                    const productValue = Swal.getPopup().querySelector('#productValue').value;
                    if (!productName || !productCounting || !productValue) {
                        Swal.showValidationMessage(`Please enter all fields`);
                    }
                    return {
                        productName: productName,
                        productCounting: productCounting,
                        productValue: productValue
                    };
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: "../servers/function",
                        data: {
                            function: "edit_product",
                            product_id: productId,
                            product_name: result.value.productName,
                            product_counting: result.value.productCounting,
                            product_cost: result.value.productValue
                        },
                        success: function (response) {
                            Swal.fire('Updated!', 'Your product has been updated.', 'success').then(() => {
                                window.location.reload()
                            });
                        },
                        error: function (error) {
                            Swal.fire('Error!', 'There was an error updating your product.', 'error');
                        }
                    });
                }
            });
        },
        error: function (error) {
            Swal.fire('Error!', 'There was an error fetching product details.', 'error');
        }
    });
}

function deleteProduct(productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                type: "POST",
                url: "../servers/function",
                data: {
                    function: "delete_product",
                    product_id: productId
                },
                success: function (response) {
                    let res = JSON.parse(response)
                    if (res.status == 200) {
                        Swal.fire('Deleted!', 'Your product has been deleted.', 'success').then(() => {
                            window.location.reload()
                        });
                    }

                },
                error: function (error) {
                    Swal.fire('Error!', 'There was an error deleting your product.', 'error');
                }
            });
        }
    });
}
function showModal() {
    $('#insertModal').modal('show');
}
$(document).ready(function () {
    // Show modal when "Add" button is clicked
    $('.btn-primary').click(function () {
        showModal();
    });

    // Handle save data
    $('#saveData').click(function () {
        // Get data from form
        const productName = $('#productName').val();
        const productCounting = $('#productCounting').val();
        const productValue = $('#productValue').val();
        const emp_id = localStorage.getItem("emp_id")

        // Send data to server using AJAX
        $.ajax({
            type: "POST",
            url: "../servers/function",
            data: {
                function: "insert_stock",
                product_name: productName,
                product_counting: productCounting,
                product_value: productValue,
                emp_id: emp_id
            },
            success: function (response) {
                // Handle success response
                Swal.fire('Success!', 'Your product has been added.', 'success').then(() => {
                    window.location.reload()
                });
            },
            error: function (error) {
                // Handle error response
                Swal.fire('Error!', 'There was an error adding your product.', 'error');
            }
        });

        // Close modal
        $('#insertModal').modal('hide');
    });
});
function deleteProject(projectId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                type: "POST",
                url: "../servers/function",
                data: {
                    function: "delete_project",
                    project_id: projectId
                },
                success: function (response) {
                    let res = JSON.parse(response)
                    if (res[0].status == 200) {
                        Swal.fire('Deleted!', 'Your product has been deleted.', 'success').then(() => {
                            window.location.reload()
                        });
                    }
                },
                error: function (error) {
                    Swal.fire('Error!', 'There was an error deleting your product.', 'error');
                }
            });
        }
    });
}
function showModalproject() {
    $('#insertprojectModal').modal('show');
}
$(document).ready(function () {
    $.ajax({
        url: '../servers/function',
        type: 'POST',
        data: {
            function: "get_customer"
        },
        success: function (data) {
            $('#Custormer').append(data);
        }
    });
    $('.btn-primary').click(function () {
        showModalproject();
    });
    $('#saveprojectData').click(function () {
        const ProjectName = $('#ProjectName').val();
        const projectStart = $('#projectStart').val();
        const projectclose = $('#projectclose').val();
        const Custormer = $('#Custormer').val();
        const Projectvalue = $('#Projectvalue').val();
        const status = 1;
        const emp_id = localStorage.getItem("emp_id")

        $.ajax({
            type: "POST",
            url: "../servers/function",
            data: {
                function: "insert_project",
                ProjectName: ProjectName,
                projectStart: projectStart,
                projectclose: projectclose,
                Custormer: Custormer,
                Projectvalue: Projectvalue,
                status: status,
                emp_id: emp_id
            },
            success: function (response) {
                // Handle success response
                Swal.fire('Success!', 'Your product has been added.', 'success').then(() => {
                    window.location.reload()
                });
            },
            error: function (error) {
                Swal.fire('Error!', 'There was an error adding your product.', 'error');
            }
        });
        $('#insertprojectModal').modal('hide');
    });
});
function deleteprojectcost(projectcostId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, delete it!',
        cancelButtonText: 'No, cancel!'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                type: "POST",
                url: "../servers/function",
                data: {
                    function: "delete_product",
                    product_id: productId
                },
                success: function (response) {
                    // ปรับปรุง UI หรือโหลดข้อมูลใหม่
                    Swal.fire('Deleted!', 'Your product has been deleted.', 'success').then(() => {
                        window.location.reload()
                    });

                },
                error: function (error) {
                    Swal.fire('Error!', 'There was an error deleting your product.', 'error');
                }
            });
        }
    });
}
function showModalprojectcost() {
    $('#insertprojectcostModal').modal('show');
}
const today = new Date();
const formattedDate = today.toISOString().split('T')[0];
$('#today').val(formattedDate);

$(document).ready(function () {
    // Fetch options for the product_name dropdown using AJAX


    var wrapper = $(".addproducts");
    var add_button = $(".add_fields");

    var x = 1;
    var p = 1;

    function addField() {
        x++;
        $.ajax({
            type: "POST",
            url: '../servers/function',
            data: {
                function: "get_stock_option"
            },
            success: function (response) {
                $(wrapper).append(`
                <div class="row justify-content-center mt-5">
                    <div class="col-12 col-md-12 col-lg-12">
                        <input type="hidden" name="add_id[]" value="0" />
                        <div class="row">
                            <div class="col-12 col-md-4 col-lg-4">
                                <label>ชื่อสินค้า :</label>
                                <select name="product_name[]" class="form-select product-name-select">
                                    <option value="">Select Product</option>
                                    ${response}
                                </select>
                            </div>
                            <div class="col-12 col-md-4 col-lg-4">
                                <label>จำนวน :</label>
                                <input type="text" name="product_value[]" class="form-control" >
                            </div>
                            <div class="col-12 col-md-4 col-lg-4">
                                <label>ราคา/หน่วย :</label>
                                <input type="text" name="product_cost[]" class="product-cost form-control" placeholder="" />
                            </div>
                        </div>
                        <div class="mt-2"></div>
                        <a href="javascript:void(0);" class="btn btn-primary remove_field">ลบ</a>
                    </div>
                </div>
            `);
                $(wrapper).find('.product-name-select').last().change(function () {
                    var selectedOption = $(this).find('option:selected');
                    var cost = selectedOption.data('cost');
                    $(this).closest('.row').find('.product-cost').val(cost);
                });
            },
            error: function (xhr, status, error) {
                console.error(xhr, status, error);
            }
        });

    }

    $(add_button).click(function (e) {
        e.preventDefault();
        addField();
    });

    $(wrapper).on("click", ".remove_field", function (e) {
        e.preventDefault();
        $(this).parent('div').remove();
        p--;
        x--;
    });
});

